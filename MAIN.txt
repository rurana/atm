IDENTIFICATION DIVISION.
PROGRAM-ID. P24AP05.
DATA DIVISION.
WORKING-STORAGE SECTION.
01  WS-RESP-CODE      PIC S9(08) COMP VALUE ZERO.
01  PARA-TABLE                        VALUE SPACES.
    03  PARA-NAME     PIC X(16) OCCURS 12 TIMES.
01  PARA-SUB          PIC 9(02) VALUE ZERO.
01  WS-CA.
    03  WS-PROCESS-FLAG      PIC X(01) VALUE SPACES.
        88  PROCESS-KEYMAP             VALUE '1'.
        88  PROCESS-ADD                VALUE '2'.
        88  PROCESS-UPD-DEL            VALUE '3'.
        88  PROCESS-DETMAP             VALUE '2', '3'.
    03  WS-EMP-ID            PIC X(05) VALUE SPACES.
COPY P24AS05.
COPY DFHAID.
COPY DFHBMSCA.
COPY EMPREC.
01  WS-DATE-TIME             PIC S9(15) COMP-3 VALUE ZERO.
01  WS-DOB.
    03  WS-DOB-YY            PIC 9(04) VALUE ZERO.
    03  WS-DOB-MM            PIC 9(02) VALUE ZERO.
    03  WS-DOB-DD            PIC 9(02) VALUE ZERO.
01  WS-SAL                   PIC 9(05)V99 VALUE ZERO.
01  WS-SALO                  PIC ZZ,ZZ9.99 VALUE ZERO.
01  WS-AMOUNT                PIC 9(05)V99 VALUE ZERO.
01  FILLER  REDEFINES  WS-AMOUNT.
03  WS-AMT-RS            PIC 9(05).
03  WS-AMT-PS            PIC 9(02).
01  WS-VALID-FLAG            PIC X(01) VALUE 'N'.
88  VALID-DATA                     VALUE 'Y'.


LINKAGE SECTION.
01  DFHCOMMAREA  PIC X(06).


PROCEDURE DIVISION.
MAIN-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'MAIN-PARA       ' TO PARA-NAME(PARA-SUB)
    END-IF
    IF EIBCALEN = ZERO
       PERFORM FIRST-PARA
    ELSE
       MOVE DFHCOMMAREA TO WS-CA
       PERFORM NEXT-PARA THRU NEXT-PARA-X
    END-IF.


END-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'END-PARA        ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS RETURN
        TRANSID('P24E')
        COMMAREA(WS-CA)
    END-EXEC.


FIRST-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'FIRST-PARA      ' TO PARA-NAME(PARA-SUB)
    END-IF
    MOVE LOW-VALUES TO KEYMAPO
    PERFORM SEND-FIRST-MAP.


SEND-FIRST-MAP.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'SEND-FIRST-MAP  ' TO PARA-NAME(PARA-SUB)
    END-IF
    PERFORM DATE-TIME-PARA.
    PERFORM SEND-KEY-MAP.
    SET PROCESS-KEYMAP TO TRUE.


SEND-KEY-MAP.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'SEND-KEY-MAP    ' TO PARA-NAME(PARA-SUB)
    END-IF
    MOVE -1 TO ID1L
    EXEC CICS SEND
       MAP('KEYMAP')
       MAPSET('P24AS05')
       FROM(KEYMAPO)
       CURSOR
       ERASE
    END-EXEC.


NEXT-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'NEXT-PARA       ' TO PARA-NAME(PARA-SUB)
    END-IF
    EVALUATE TRUE
       WHEN PROCESS-KEYMAP
          PERFORM PROCESS-KEYMAP-PARA
       WHEN PROCESS-DETMAP
          PERFORM PROCESS-DETMAP-PARA
    END-EVALUATE.


SEND-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'SEND-PARA       ' TO PARA-NAME(PARA-SUB)
    END-IF
    EVALUATE TRUE
       WHEN PROCESS-KEYMAP
          PERFORM SEND-KEY-MAP
       WHEN PROCESS-DETMAP
          PERFORM SEND-DETAIL-MAP
    END-EVALUATE.


NEXT-PARA-X.
    EXIT.


PROCESS-KEYMAP-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'PROC KEYMAP PARA' TO PARA-NAME(PARA-SUB)
    END-IF
    EVALUATE EIBAID
       WHEN DFHENTER
          PERFORM RECEIVE-PROCESS-KEYMAP
       WHEN DFHPF3
          EXEC CICS XCTL
             PROGRAM('P24AP03')
          END-EXEC
       WHEN OTHER
          MOVE 'INVALID KEY PRESSED' TO MSG1O
    END-EVALUATE.


RECEIVE-PROCESS-KEYMAP.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'RCV PROC KEYMAP ' TO PARA-NAME(PARA-SUB)
    END-IF
    PERFORM RECEIVE-KEY-MAP
    IF ID1L = ZERO OR ID1I = SPACES
       MOVE 'PLEASE ENTER AN EMPLOYEE ID' TO MSG1O
    ELSE
       PERFORM READ-EMPLOYEE
    END-IF.


RECEIVE-KEY-MAP.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'RECEIVE KEY MAP ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS RECEIVE
       MAP('KEYMAP')
       MAPSET('P24AS05')
       INTO(KEYMAPI)
    END-EXEC.


READ-EMPLOYEE.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'READ EMPLOYEE   ' TO PARA-NAME(PARA-SUB)
    END-IF
    MOVE LOW-VALUES TO DETMAPO
    MOVE ID1I TO WS-EMP-ID, ID2O
    EXEC CICS READ
       FILE('P24AFILE')
       RIDFLD(WS-EMP-ID)
       INTO(EMPLOYEE-RECORD)
       RESP(WS-RESP-CODE)
    END-EXEC.
    EVALUATE WS-RESP-CODE
       WHEN DFHRESP(NORMAL)
          MOVE EMP-NAME  TO NAMEO
          MOVE EMP-LOC   TO LOCO
          MOVE EMP-TECH  TO TECHO
          MOVE EMP-DOB(1:4) TO DOBYYO
          MOVE EMP-DOB(5:2) TO DOBMMO
          MOVE EMP-DOB(7:2) TO DOBDDO
          MOVE EMP-EARN  TO WS-AMOUNT
          MOVE WS-AMT-RS TO EARNRSO
          MOVE WS-AMT-PS TO EARNPSO
          MOVE EMP-DEDN  TO WS-AMOUNT
          MOVE WS-AMT-RS TO DEDNRSO
          MOVE WS-AMT-PS TO DEDNPSO
          COMPUTE WS-SAL = EMP-EARN - EMP-DEDN
          MOVE WS-SAL    TO WS-SALO
          MOVE WS-SALO  TO SALO
          MOVE 'UPDATE / DELETE' TO MODEO
          MOVE -1                TO NAMEL
          SET PROCESS-UPD-DEL TO TRUE
*           MOVE DFHBMDAR TO LABEL1A
*           MOVE DFHBMPRO TO LABEL2A
       WHEN DFHRESP(NOTFND)
           MOVE -1                TO NAMEL
           MOVE SPACES TO NAMEO, LOCO, TECHO,
               DOBYYO, DOBMMO, DOBDDO, SALO,
               EARNRSO, EARNPSO, DEDNRSO, DEDNPSO
*           MOVE ZERO  TO WS-SAL
*           MOVE WS-SALO  TO SALO
           MOVE 'ADD EMPLOYEE'  TO MODEO
SET PROCESS-ADD TO TRUE
*           MOVE DFHBMPRO TO LABEL1A
*           MOVE DFHBMDAR TO LABEL2A
          WHEN OTHER
             MOVE 'ERROR PROCESSING FILE' TO MSG1O
    END-EVALUATE.


SEND-DETAIL-MAP.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'SEND-DETAIL-MAP ' TO PARA-NAME(PARA-SUB)
    END-IF
    PERFORM DATE-TIME-PARA.
    EXEC CICS SEND
       MAP('DETMAP')
       MAPSET('P24AS05')
       FROM(DETMAPO)
       CURSOR
       ERASE
    END-EXEC.


PROCESS-DETMAP-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'PROC DETMAP PARA' TO PARA-NAME(PARA-SUB)
    END-IF
    EVALUATE EIBAID
       WHEN DFHPF2
          IF PROCESS-ADD
             PERFORM ADD-PARA
          ELSE
             MOVE 'PF2 NOT ENABLED' TO MSG2O
          END-IF
       WHEN DFHPF3
          SET PROCESS-KEYMAP TO TRUE
       WHEN DFHPF4
          IF PROCESS-UPD-DEL
             PERFORM UPDATE-PARA
          ELSE
             MOVE 'PF4 NOT ENABLED' TO MSG2O
          END-IF
       WHEN DFHPF5
          IF PROCESS-UPD-DEL
             PERFORM DELETE-PARA
          ELSE
             MOVE 'PF5 NOT ENABLED' TO MSG2O
          END-IF
       WHEN OTHER
          MOVE 'INVALID KEY PRESSED' TO MSG2O
    END-EVALUATE.


RECEIVE-DETAIL-MAP.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'RCV DETAIL MAP  ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS RECEIVE
       MAP('DETMAP')
       MAPSET('P24AS05')
       INTO(DETMAPI)
    END-EXEC.


DELETE-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
       MOVE 'DELETE-PARA     ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS DELETE
	FILE('P24AFILE')
	RIDFLD(WS-EMP-ID)
	RESP(WS-RESP-CODE)
    END-EXEC
     EVALUATE WS-RESP-CODE
	WHEN DFHRESP(NORMAL)
	   MOVE 'DELETE SUCCESSFUL' TO MSG1O
	WHEN OTHER
	   MOVE 'DELETE NOT SUCCESSFUL' TO MSG1O
    END-EVALUATE
    SET PROCESS-KEYMAP TO TRUE
    MOVE WS-EMP-ID TO ID1O.


ADD-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'ADD-PARA        ' TO PARA-NAME(PARA-SUB)
    END-IF
    PERFORM RECEIVE-DETAIL-MAP
    PERFORM VALIDATE-PARA
    IF VALID-DATA
	PERFORM MOVE-PARA
	PERFORM WRITE-PARA
    END-IF.


WRITE-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'WRITE-PARA      ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS WRITE
	FILE('P24AFILE')
	RIDFLD(WS-EMP-ID)
	FROM (EMPLOYEE-RECORD)
	RESP(WS-RESP-CODE)
    END-EXEC
    EVALUATE WS-RESP-CODE
	WHEN DFHRESP(NORMAL)
	   MOVE 'ADD SUCCESSFUL' TO MSG1O
	WHEN OTHER
	   MOVE 'ADD NOT SUCCESSFUL' TO MSG1O
    END-EVALUATE
    SET PROCESS-KEYMAP TO TRUE
    MOVE WS-EMP-ID TO ID1O.


UPDATE-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'UPDATE-PARA     ' TO PARA-NAME(PARA-SUB)
    END-IF
    PERFORM RECEIVE-DETAIL-MAP
    PERFORM VALIDATE-PARA
    IF VALID-DATA
	PERFORM REWRITE-PARA
    END-IF.


REWRITE-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'REWRITE-PARA    ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS READ
	FILE('P24AFILE')
	RIDFLD(WS-EMP-ID)
	INTO(EMPLOYEE-RECORD)
	RESP(WS-RESP-CODE)
	UPDATE
    END-EXEC
    EVALUATE WS-RESP-CODE
	WHEN DFHRESP(NORMAL)
	    PERFORM MOVE-PARA
	    EXEC CICS REWRITE
		FILE('P24AFILE')
		FROM(EMPLOYEE-RECORD)
		RESP(WS-RESP-CODE)
	    END-EXEC
	    EVALUATE WS-RESP-CODE
		WHEN DFHRESP(NORMAL)
		   MOVE 'UPDATE SUCCESSFUL' TO MSG1O
		WHEN OTHER
		  MOVE 'UPDATE NOT SUCCESSFUL' TO MSG1O
	    END-EVALUATE
	WHEN OTHER
	    MOVE 'ERROR PROCESSING FILE' TO MSG1O
    END-EVALUATE
    SET PROCESS-KEYMAP TO TRUE
    MOVE WS-EMP-ID TO ID1O.


VALIDATE-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'VALIDATE-PARA   ' TO PARA-NAME(PARA-SUB)
    END-IF
    MOVE 'Y' TO WS-VALID-FLAG.


MOVE-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'MOVE-PARA       ' TO PARA-NAME(PARA-SUB)
    END-IF
    MOVE WS-EMP-ID             TO EMP-ID
    MOVE NAMEI                 TO EMP-NAME
    MOVE LOCI                  TO EMP-LOC
    MOVE TECHI                 TO EMP-TECH
    MOVE DOBDDI                TO EMP-DOB(7:2)
    MOVE DOBMMI                TO EMP-DOB(5:2)
    MOVE DOBYYI                TO EMP-DOB(1:4)
    MOVE EARNRSI               TO WS-AMT-RS
    MOVE EARNPSI               TO WS-AMT-PS
    MOVE WS-AMOUNT             TO EMP-EARN
    MOVE DEDNRSI               TO WS-AMT-RS
    MOVE DEDNPSI               TO WS-AMT-PS
    MOVE WS-AMOUNT             TO EMP-DEDN.


DATE-TIME-PARA.
    ADD 1 TO PARA-SUB
    IF PARA-SUB < 13
	MOVE 'DATE-TIME-PARA  ' TO PARA-NAME(PARA-SUB)
    END-IF
    EXEC CICS ASKTIME
	ABSTIME(WS-DATE-TIME)
    END-EXEC
    EXEC CICS FORMATTIME
	ABSTIME(WS-DATE-TIME)
	DDMMYYYY(DATE1O)
	DATESEP
	TIME(TIME1O)
	TIMESEP
    END-EXEC
    MOVE DATE1O TO DATE2O
    MOVE TIME1O TO TIME2O.
